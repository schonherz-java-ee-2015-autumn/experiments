/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/9.3.5.v20151012
 * Generated at: 2015-10-24 14:47:25 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"utf-8\">\r\n");
      out.write("\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function() {\r\n");
      out.write("\t\t$(\"#accordion\").accordion();\r\n");
      out.write("\t\t$(\"#datepicker\" ).datepicker({\r\n");
      out.write("\t\t      changeMonth: true,\r\n");
      out.write("\t\t      changeYear: true,\r\n");
      out.write("\t\t       minDate: \"-120y\", \r\n");
      out.write("\t\t       maxDate: -1 \r\n");
      out.write("\t\t    });\r\n");
      out.write("\t\t$( \"input[type=submit], a, button\" )\r\n");
      out.write("\t      .button();\r\n");
      out.write("\t      \r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t  $( \"form\" ).submit(function( event ) {\r\n");
      out.write("\t\t  \r\n");
      out.write("    \t  var d = validateDate($(\"#dateId\").val(),\"MM/dd/yyyy\");\r\n");
      out.write("    \t  \r\n");
      out.write("    \t  if(d != \"true\") {\r\n");
      out.write("   \t \t\t $('#dateIdL').addClass('warning');   \r\n");
      out.write("   \t \t\t  event.preventDefault();   \t \t\t  \r\n");
      out.write("   \t \t  } else {\r\n");
      out.write("   \t \t\t $('#dateIdL').removeClass('warning');  \r\n");
      out.write("   \t \t  }\r\n");
      out.write("    \r\n");
      out.write("    \t});\r\n");
      out.write("    \r\n");
      out.write("   \r\n");
      out.write("  function validateDate(inputDate,inputDateFormat) {\r\n");
      out.write("\t\tvar reValue = 0;\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : 'ValidateDate',\r\n");
      out.write("\t\t\tmethod : \"POST\",\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\tdate : inputDate,\r\n");
      out.write("\t\t\t\tdateFormat : inputDateFormat\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\treValue = data;\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(data) {\r\n");
      out.write("\t\t\t\treValue = data;\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tdataType : \"html\",\r\n");
      out.write("\t\t\tasync:false\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\treturn reValue;\r\n");
      out.write("\t}\r\n");
      out.write("   \r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"main\">\r\n");
      out.write("\r\n");
      out.write("\t<div id=\"accordion\">\r\n");
      out.write("\r\n");
      out.write("\t\t<h2>Registration</h2>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<form action=\"RegistrationServlet\" method=\"post\" class=\"cmxform\">\r\n");
      out.write("\t\t\t\t\t<p><label for=\"username\" id=\"usernameLabel\"> User name:<span>**</span> </label>\r\n");
      out.write("\t\t\t\t\t<input type=\"text\" name=\"username\" minlength=\"4\" required></p> \r\n");
      out.write("\t\t\t\t\t<p><label for=\"firstname\" id=\"firstNameLabel\">First name:</label> <input type=\"text\" name=\"firstname\"> </p>\r\n");
      out.write("\t\t\t\t\t<p><label for=\"latsname\" id=\"lastNameLabel\">Last name:</label> <input type=\"text\" name=\"lastname\"></p>\r\n");
      out.write("\t\t\t\t\t<p><label for=\"email\" id=\"emailLabel\">E-mail:<span>*</span></label><input type=\"email\" name=\"email\" required></p>\r\n");
      out.write("\t\t\t\t\t<p> <label for=\"pass\" id=\"passwordLabel\">Password:<span>***</span></label><input type=\"password\" name=\"pass\" required minlength=\"6\"></p>\r\n");
      out.write("\t\t\t\t\t<p><label for=\"birth\" id=\"dateOfBirthLabel\">Birth date:<span>*</span></label><input type=\"text\" name=\"birth\" id=\"datepicker\" required></p>\r\n");
      out.write("\t\t\t\t\t<p> <input type=\"submit\" value=\"Register\"></p>\r\n");
      out.write("\t\t\t\t\t<div id=\"tooltip\">\r\n");
      out.write("\t\t\t\t\t<p>*- required<p>\r\n");
      out.write("\t\t\t\t\t<p>** - required, minimum 4 characters long.<p>\r\n");
      out.write("\t\t\t\t\t<p>***- required, minimum 6 characters long.<p>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<h2>Login</h2>\r\n");
      out.write("\t\t<div>\r\n");
      out.write("\t\t\t<form action=\"LoginServlet\" method=\"post\" class=\"cmxform\">\r\n");
      out.write("\t\t\t\t\t<p><label for=\"username\">User name:</label> <input type=\"text\" name=\"username\" required></p>\r\n");
      out.write("\t\t\t\t\t<p><label for=\"pass\">Password:</label> <input type=\"password\" name=\"pass\" required></p>\r\n");
      out.write("\t\t\t\t\t<p><input type=\"submit\" value=\"Login\"><p>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t");

String state = (String) request.getAttribute("state");
 if(state !=null && state.equals("SUCCESS")){
	 request.removeAttribute("state");
	for (java.util.Enumeration<String> e = request.getAttributeNames(); e.hasMoreElements();)
		       request.removeAttribute(e.nextElement());
	
      out.write("\r\n");
      out.write("\t<div class=\"success\">Successful registration! </div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t//javascript redirection\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tsetTimeout(function(){document.location.replace(\"UserList.jsp\")}, 1200);\r\n");
      out.write("</script>\r\n");
      out.write("\t");

}else if(state!=null && state.equals("FAILURE")){
	request.removeAttribute("state");
	for (java.util.Enumeration<String> e = request.getAttributeNames(); e.hasMoreElements();)
	       request.removeAttribute(e.nextElement());
	
      out.write("\r\n");
      out.write("\t<div class=\"failure\">Registration failed. </div>\r\n");
      out.write("\t");

}else if(state!=null && state.equals("LOGIN_FAILURE")){
	
      out.write("\r\n");
      out.write("\t<div class=\"failure\">Login failed. </div>\r\n");
      out.write("\t");

}

      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
